name: Deploy to Azure VM

on:
  push:
    branches: [master]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup SSH
      run: |
        # Start the SSH agent
        eval $(ssh-agent -s)
        
        # Create the .ssh directory if it doesn't exist
        mkdir -p ~/.ssh
        
        # Save the SSH private key to ~/.ssh/id_rsa and set permissions to 600
        echo "${{ secrets.AZURE_VM_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa  # Ensure permissions are correct immediately
        
        # Add the private key to the SSH agent
        ssh-add ~/.ssh/id_rsa
        
        # Add Azure VM host to known_hosts
        ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts
        
        # Debugging output (to check the private key and known hosts)
        cat ~/.ssh/id_rsa
        cat ~/.ssh/known_hosts

    - name: Copy frontend code
      run: |
        # Clean previous frontend files on the VM
        ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} "rm -rf /home/suvadip/cv_maker_frontend/*"
        
        # Copy the frontend files from local to VM
        scp -r ./client/* ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }}:/home/suvadip/cv_maker_frontend/

    - name: Build frontend on VM and deploy to NGINX folder
      run: |
        ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} "
          # Ensure frontend dependencies are installed and build the project
          cd /home/suvadip/cv_maker_frontend &&
          if [ ! -d 'node_modules' ]; then npm ci --prefer-offline; fi && # Efficient install
          npm run build &&
          # Remove old NGINX files and deploy new build
          sudo rm -rf /var/www/html/* &&
          sudo cp -r build/* /var/www/html/
        "

    - name: Copy backend code
      run: |
        # Clean previous backend files on the VM
        ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} "rm -rf /home/suvadip/cv_maker_backend/*"
        
        # Copy the backend files from local to VM
        scp -r ./server/* ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }}:/home/suvadip/cv_maker_backend/

    - name: Install backend deps and restart with PM2
      run: |
        ssh ${{ secrets.AZURE_VM_USER }}@${{ secrets.AZURE_VM_HOST }} "
          # Ensure backend dependencies are installed
          cd /home/suvadip/cv_maker_backend &&
          if [ ! -d 'node_modules' ]; then npm ci --prefer-offline; fi &&
          # Restart or start backend app with PM2
          pm2 restart app || pm2 start app.js --name app
        "
